---
# podmd
# 
# ```
description: |
  This file provides configurations for Beacon query related parameters.
  Parameters are part of different "scopes", which refer to specific (logical
  or physical) data collections.
  The "alias" parameters provide alternative spellings to the parameter names;
  this can be helpful when e.g. using dot-annotation which may clash with
  interpolations.
# ```
# #### API URL structure
# The different parameters are extracted from the ordered URL path elements.
# ```
api_mappings:
  - paramkey: apidb
    default: progenetix
  - paramkey: apiscope
    default: publications
  - paramkey: apimethod
    default: technologycounts
  - paramkey: filters
    default: ""
  - paramkey: apioutput
    default: json
# ```
# #### API Shortcuts
# 
# Shortcuts are used to simplify access to methods with canonical databases
# and/or collections. They are expanded from `/api/___shortcutKey___/` to the 
# associated value.
# ```
api_shortcuts:
  ncitcodes: '/api/progenetix/icdmaps/ncitcodes/'
  equivalents: '/api/progenetix/icdmaps/equivalents/'
  publicationdata:  '/api/progenetix/publications/publicationdata/'
  publicationdetails:  '/api/progenetix/publications/publicationdetails/'
  technologycounts:  '/api/progenetix/publications/technologycounts/'
# ```
# #### API methods and their scopes
# ```
api_methods:
  mappings:
    scopes:
      - biosubsets
      - datacollections
  technologycounts:
    scopes:
      - publications
  publicationdata:
    scopes:
      - publications
  publicationdetails:
    scopes:
      - publications
  subsethistogram:
    scopes:
      - publications
      - datacollections
      - biosubsets
  subsetdata:
    scopes:
      - biosubsets
      - datacollections
  geomap:
    scopes:
      - publications
      - biosamples
      - callsets
  sampledetails:
    scopes:
      - biosamples
  count:
    scopes:
      - biosamples
      - publications
      - icdmaps
      - biosubsets
      - datacollections
  equivalents:
    scopes:
      - icdmaps
  ncitcodes:
    scopes:
      - icdmaps
  statusmaps:
    scopes:
      - callsets
  valuemaps:
    scopes:
      - callsets
# ```
# end_podmd   
scopes:
  variants:
    scope: variants
    parameters:
      assemblyId:
        dbkey: assembly_id
        alias:
          - assembly_id
        pattern: '^\w+?[\w\-]*?\w*?$' # for 2019-nCoV
      referenceName:
        paramkey: 'variants.reference_name'
        dbkey: reference_name
        alias:
          - reference_name
#        pattern: '^([1-9]|1\d|2[0-4]|[XY]|MT)$'
        pattern: '^\w+?[\w\-]*?\w*?$' # for 2019-nCoV
      mateName:
        paramkey: 'variants.mate_name'
        dbkey: mate_name
        alias:
          - mate_name
        pattern: '^([1-9]|1\d|2[0-4]|[XY]|MT)$'
      referenceBases:
        paramkey: 'variants.reference_bases'
        dbkey: reference_bases
        alias:
          - reference_bases
        pattern: '^[ACGTN]+$'
      alternateBases:
        paramkey: 'variants.alternate_bases'
        dbkey: alternate_bases
        alias:
          - alternate_bases
        pattern: '^[ACGTN]+$'
      variantType:
        paramkey: 'variants.variant_type'
        dbkey: variant_type
        alias:
          - variant_type
        pattern: '^(DUP|DEL|BND|INS|INV|CNV|INDEL|SNP|SNV)$'
      start:
        paramkey: 'variants.start_min'
        dbkey: start_min
        alias:
          - start
        pattern: '^\d+?$'
        type: integer
      end:
        paramkey: 'variants.end_max'
        dbkey: end_max
        alias:
          - end
        pattern: '^\d+?$'
        type: integer
      startMin:
        paramkey: 'variants.start_min'
        dbkey: start_min
        alias:
          - start_min
        pattern: '^\d+?$'
        type: integer
      startMax:
        paramkey: 'variants.start_max'
        dbkey: start_max
        alias:
          - start_max
        pattern: '^\d+?$'
        type: integer
      endMin:
        paramkey: 'variants.end_min'
        dbkey: end_min
        alias:
          - end_min
        pattern: '^\d+?$'
        type: integer
      endMax:
        paramkey: 'variants.end_max'
        dbkey: end_max
        alias:
          - end_max
        pattern: '^\d+?$'
        type: integer

  callsets:
    scope: callsets
    parameters:
      id:
        paramkey: 'callsets.id'
        dbkey: 'id'
        alias:
          - 'callsets-id'
          - 'id'
        pattern: '^.+?\w+?.+?$'
        type: array
      biosampleid:
        paramkey: 'callsets.biosampleid'
        dbkey: 'biosampleid'
        alias:
          - 'callsets-biosampleid'
          - 'biosampleid'
        pattern: '^.+?\w+?.+?$'
        type: array

  biosamples:
    scope: biosamples
    parameters:
      id:
        paramkey: 'biosamples.id'
        dbkey: 'id'
        alias:
          - 'biosamples-id'
          - 'id'
        pattern: '^.+?\w+?.+?$'
        type: array
      biocharacteristics.type.id:
        paramkey: 'biosamples.biocharacteristics.type.id'
        dbkey: 'biocharacteristics.type.id'
        alias:
          - 'biosamples-biocharacteristics-type-id'
          - 'biocharacteristics.type.id'
          - 'biocharacteristics-type-id'
        pattern: '^(\w+[\:\-$])?[\dC]*?(?:[\w\-\.]+?)?'
        type: array
      external_references.type.id:
        paramkey: 'biosamples.external_references.type.id'
        alias:
          - 'biosamples-external_references-type-id'
          - 'external_references.type.id'
          - 'external_references-type-id'
        pattern: '^(\w+[\:\-$])?\w.?(?:[\w\-\.]+?)?'
        type: array
      provenance.material.type.id:
        paramkey: 'biosamples.provenance.material.type.id'
        dbkey: 'provenance.material.type.id'
        alias:
          - 'biosamples-provenance-material-type-id'
          - 'provenance-material-type-id'
          - 'provenance.material.type.id'
        pattern: '^EFO\:000965[456]$'
        type: string
      city:
        paramkey: 'biosamples.provenance.geo.city'
        dbkey: 'provenance.geo.city'
        alias:
          - 'biosamples-provenance-geo-city'
          - 'biosamples.provenance.geo.city'
          - 'provenance.geo.city'
          - 'provenance-geo-city'
        pattern: '^\w+[\w\- ]+?$'
        type: array
      geolat:
        paramkey: 'provenance.geo.geojson.lat'
        dbkey: 'provenance.geo.geojson.lat'
        alias:
          - 'provenance-geo-geojson-lat'
        pattern: '^\-?\d+?(\.\d+?)?$'
        type: float
      geolong:
        paramkey: 'provenance.geo.geojson.long'
        dbkey: 'provenance.geo.geojson.long'
        alias:
          - 'provenance-geo-geojson-long'
        pattern: '^\-?\d+?(\.\d+?)?$'
        type: float
      geodist:
        paramkey: 'provenance.geo.geojson.maxdist'
        dbkey: 'provenance.geo.geojson.maxdist'
        alias:
          - 'provenance-geo-geojson-maxdist'
        pattern: '^\d+?$'
        type: integer

  biosubsets:
    scope: biosubsets
    parameters:
      id:
        paramkey: 'biocharacteristics.type.id'
        dbkey: 'id'
        alias:
          - 'biosubsets-biocharacteristics-type-id'
          - 'biosubsets.biocharacteristics.type.id'
          - 'biocharacteristics.type.id'
          - 'biocharacteristics-type-id'
        pattern: '^\w+[\:\-$]?(?:[\w\-\.]+?\+?)?'
        type: array

  datacollections:
    scope: datacollections
    parameters:
      id:
        paramkey: 'external_references.type.id'
        dbkey: 'id'
        alias:
          - 'datacollections-external_references-type-id'
          - 'datacollections.external_references.type.id'
          - 'external_references.type.id'
          - 'external_references-type-id'
        pattern: '^\w+[\:\-$]?(?:[\w\-\.]+?)?'
        type: array
      city:
        paramkey: 'provenance.geo.city'
        dbkey: 'provenance.geo.city'
        alias:
          - 'datacollections-provenance-geo-city'
          - 'datacollections.provenance.geo.city'
          - 'provenance-geo-city'
        pattern: '^\w+[\w\- ]+?$'
        type: array

  publications:
    scope: publications
    parameters:
      id:
        paramkey: 'publications.id'
        dbkey: 'id'
        alias:
          - 'external_references.type.id'
        pattern: '^\w+[\:\-$]?(?:[\w]+?)?'
        type: array
      city:
        paramkey: 'publications.provenance.geo.city'
        dbkey: 'provenance.geo.city'
        alias: []
        pattern: '^\w+[\w\- ]+?$'
        type: array
      country:
        paramkey: 'publications.provenance.geo.country'
        dbkey: 'provenance.geo.country'
        alias: []
        pattern: '^\w+[\w\- ]+?$'
        type: array
      geolat:
        paramkey: 'provenance.geo.geojson.lat'
        dbkey: 'provenance.geo.geojson.lat'
        alias:
          - 'provenance-geo-geojson-lat'
        pattern: '^\-?\d+?(\.\d+?)?$'
        type: float
      geolong:
        paramkey: 'provenance.geo.geojson.long'
        dbkey: 'provenance.geo.geojson.long'
        alias:
          - 'provenance-geo-geojson-long'
        pattern: '^\-?\d+?(\.\d+?)?$'
        type: float
      geodist:
        paramkey: 'provenance.geo.geojson.maxdist'
        dbkey: 'provenance.geo.geojson.maxdist'
        alias:
          - 'provenance-geo-geojson-maxdist'
        pattern: '^\d+?$'
        type: integer
      cccghcount:
        paramkey: 'publications.counts.ccgh'
        dbkey: 'counts.ccgh'
        alias: []
        pattern: '^(?:ccgh(?:[\:\-])?)?[><]?\d*?$'
        type: string
      acghcount:
        paramkey: 'publications.counts.acgh'
        dbkey: 'counts.acgh'
        pattern: '^(?:acgh(?:[\:\-])?)?[><]?\d*?$'
        type: string
      wescount:
        paramkey: 'publications.counts.wes'
        dbkey: 'counts.wes'
        alias: []
        pattern: '^(?:wes(?:[\:\-])?)?[><]?\d*?$'
        type: string
      wgscount:
        paramkey: 'publications.counts.wgs'
        dbkey: 'counts.wgs'
        alias: []
        pattern: '^(?:wgs(?:[\:\-])?)?[><]?\d*?$'
        type: string
      ngscount:
        paramkey: 'publications.counts.ngs'
        dbkey: 'counts.ngs'
        alias: []
        pattern: '^(?:ngs(?:[\:\-])?)?[><]?\d*?$'
        type: string
      genomescount:
        paramkey: 'publications.counts.genomes'
        dbkey: 'counts.genomes'
        alias: []
        pattern: '^(?:genomes(?:[\:\-])?)?[><]?\d*?$'
        type: string
      pgxsamplecount:
        paramkey: 'publications.info.progenetix_biosamples_count'
        dbkey: 'info.progenetix_biosamples_count'
        alias: []
        pattern: '^(?:pgx_samples(?:[\:\-])?)?[><]?\d*?$'
        type: string
      amsamplecount:
        paramkey: 'publications.info.arraymap_biosamples_count'
        dbkey: 'info.arraymap_biosamples_count'
        alias: []
        pattern: '^(?:amsamples(?:[\:\-])?)?[><]?\d*?$'
        type: string

  handover:
    scope: handover
    parameters:
      accessid:
        paramkey: 'accessid'
        dbkey: 'id'
        pattern: '^\w[\w\-]+?\w$'
        type: string

  filters:
    scope: filters
    parameters:
      randno:
        paramkey: 'filters.randno'
        dbkey: 'randno'               # not really used this way
        alias:
          - randno
        pattern: '^\d+?$'
        type: integer
